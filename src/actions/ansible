#!/usr/bin/env bash

# Exit immediately on error
set -e
trap 'echo "Aborting due to errexit on line $LINENO. file $(cd $(dirname "$0"); pwd)/$(basename "$0"). Exit code: $?" >&2' ERR

_list_playbooks(){

for file in $APP_YALLA_PATH/ansible/*.yml; do
    local filename=$(basename "${file}")
    if [ "$filename" != "hosts.yml" ]; then
        echo "${filename}"
    fi
done

}

_ansible_playbook_show_help() {

cat << EOF
Usage: yalla ap | ansible-playbook [-vikCKbe] [-e ANSIBLE EXTRA VARS] [options]...

Options:
----------------------------------------------------------------------

    -v          verbose mode. Can be used multiple times for increased verbosity.
    -h          display this help and exit
    --ask-vault-pass      ask for vault password

    -e                    set additional variables as key=value
    --flush-cache         clear the fact cache
    -C, --check           no changes; instead, try to predict some
    -k, --ask-pass        ask for connection password
    -u                    connect as this user (default=None)

Privilege Escalation Options:
----------------------------------------------------------------------

    control how and which user you become as on target hosts

    -b, --become        run operations with become (does not imply password prompting)
    --become-method=BECOME_METHOD
                        privilege escalation method to use (default=sudo),
                        valid choices: [ sudo | su | pbrun | pfexec | doas |
                        dzdo | ksu | runas | pmrun ]
    --become-user=BECOME_USER
                        run operations as this user (default=root)
    -K, --ask-become-pass


Available Playbooks:
----------------------------------------------------------------------

$(_list_playbooks)

Example :
----------------------------------------------------------------------
    yalla ap mysql-sync -e "source=staging"


Access all ansible-playbook variables:
----------------------------------------------------------------------
If you need to run others and non available options within Ansible, run :

docker-compose -f yalla/docker/docker-compose.yml run --rm  ansible_playbook /ansible-playbook/[PLAYBOOK-NAME].yml [options]

EOF
}

function _ansible_playbook(){
    local playbook=$1

    local args=("$@")
    declare -a docker_args=()

    # # local extra_args=${args[*]:1}
    # # #docker-compose -f docker/docker-compose.yml run --rm  ansible_host /ansible-playbook/mysql-sync.yml -e "source=staging"
    # # #ansible-playbook mysql-sync.yml -e "source=staging"


    # @see : http://mywiki.wooledge.org/ComplexOptionParsing
    # set defaults
    OPTIND=1
    i=$(($# + 1)) # index of the first non-existing argument
    local optspec="vikCKbe:h-:"

    while getopts "$optspec" opt "${args[@]}"; do

        while true; do
          case "${opt}" in
            -)
                if [[ ${OPTARG} =~ .*=.* ]]; then # with this --key=value format only one argument is possible
                     opt=${OPTARG/=*/}
                     ((${#opt} <= 1)) && {
                         _error "Syntax error: Invalid long option '$opt'" >&2
                         exit 2
                     }
                     # if [ "${opt}" != 1 ]; then
                     #     echo "Syntax error: Option '$opt' does not support this syntax." >&2
                     #     exit 2
                     # fi
                     OPTARG=${OPTARG#*=}
                else
                    opt="$OPTARG"

                    ((${#opt} <= 1)) && {
                        _error "Syntax error: Invalid long option '$opt'" >&2
                        exit 2
                    }

                    OPTARG=(${@:OPTIND})
                    (OPTIND+=$opt)

                   ((OPTIND > i)) && {
                       _error "Syntax error: Not all required arguments for option '$opt' are given." >&2
                       exit 3
                   }
               fi

                continue #now that opt/OPTARG are set we can process them as
                # if getopts would've given us long options
                ;;
            # Report ansible-playbook options
            become-user | become-method )
                docker_args+=("--$opt=$OPTARG")
               ;;
            ask-pass | become | ask-become-pass | check | flush-cache | ask-vault-pass )
                docker_args+=("--$opt")
               ;;
            k | b | K | C )
                docker_args+=("-$opt")
               ;;
            e )
              docker_args+=("--extra-vars=${OPTARG}")
              ;;
            i )
              docker_args+=("-${opt}" "${OPTARG}")
              ;;
            v)
              docker_args+=("-v${OPTARG}")
              ;;
            h)
                _ansible_playbook_show_help
                exit 0
                ;;
            ?)
                _ansible_playbook_show_help
                _error "Invalid option or missing argument"
                exit 1
              ;;
            :)
                _ansible_playbook_show_help
                _error "Option -${OPTARG} requires an argument.\n"
                exit 1
              ;;
            *)
                _ansible_playbook_show_help
                _error "Syntax error: Unknown long option ${opt}"
                exit 2
                ;;
            esac
        break; done
    done
    shift $((OPTIND -1))

    if ! [ -f "$APP_YALLA_PATH/ansible/${playbook}.yml" ] && ! [ "${playbook##*$hosts*}" ]; then
        _ansible_playbook_show_help
        _bad_exit "${playbook} is not an available playbook"
    fi



    docker-compose -f "${APP_YALLA_PATH}/docker/docker-compose.yml" run --rm ansible_playbook ${docker_args[*]} "/ansible-playbook/${playbook}.yml"
}

_ansible_vault_show_help() {

cat << EOF
Usage: yalla av | ansible-vault [-h|--help|create|decrypt|edit|encrypt|encrypt_string|rekey|view]

Options:
----------------------------------------------------------------------

    create      Create encrypted files
    edit        Editing encrypted files
    rekey       Rekeying encrypted files
    view        Viewing encrypted files
    decrypt     Decrypting encrypted files
    encrypt     Encrypting unencrypted files
    -h, --help  display this help and exit

Example :
----------------------------------------------------------------------
    yalla av | ansible-vault create


Run ansible vault in a regular way:
----------------------------------------------------------------------
If you need to run others and non available options within Ansible, run :

docker-compose -f yalla/docker/docker-compose.yml run --rm  ansible_vault [options]

EOF
}



_ansible_vault(){
  readonly OPT="$1"
  local ACTION=''

  case "$OPT" in
    create | edit | rekey | view  | decrypt | encrypt )
      ACTION="$OPT"
    ;;
    --help | -h )
      _ansible_vault_show_help
      exit 0
    ;;
    * )
      _ansible_vault_show_help
      _error "Syntax error: Unknown option ${opt}"
      exit 2
    ;;
  esac

  docker-compose -f "${APP_YALLA_PATH}/docker/docker-compose.yml" run --rm ansible_vault "$ACTION" /ansible-config/vaults/vault.yml
}
