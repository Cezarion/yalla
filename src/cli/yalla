#!/usr/bin/env bash

# Exit immediately on error
set -o nounset
set -o errexit
set -o pipefail
IFS=$'\n\t'
trap 'echo "Aborting due to errexit on line $LINENO. Exit code: $?" >&2' ERR

readonly YALLA_VERSION=0.1.2

## Set Variables

export WORKING_DIR=$(pwd)

## Parse args
if [ $# -eq 0 ]; then
  CMD="-h"
else
  CMD=$1
  shift
fi



# Exit if not args or not a yalla project
_check_is_yalla_app() {
  if [ ! -d "./yalla" ] && [ "$CMD" != "create-project" ] && [ "$CMD" != "app" ]; then
      echo -e "\n\xE2\x9C\x97 Error ! \n"
      cat <<HEREDOC
The "yalla" directory does not appear to be present.
Run <yalla create-project> or go to a directory where yall is installed

HEREDOC
      exit 1;
  fi
}


###############################################################################
# _yalla_self_install()
#
# Usage:
#   _yalla_self_install
#
# clone remote repository
#
# @todo :
#  * install a specific version
#  * clone a tag not a branche
#

_yalla_self_install(){
    echo "Pull yalla tools"
    echo ""
    git clone -b yalla --single-branch git@bitbucket.org:buzzaka/project-skeleton.git yalla
    echo ""
}

declare -x -f _yalla_self_install;

_yalla_usage(){
cat <<HEREDOC
Yalla is a command set to simplify the creation or maintenance of a project.

Requirements :
Docker   : https://www.docker.com/community-edition#download
Devilbox : https://bitbucket.org/buzzaka/devilbox

----------------------------------------------------------------------

Main commands :
---------------

  init                  Init a new project with the new skeleton workflow (Alias of yalla project init)
  start                 Start services (alias of yalla dr start)
  restart               Restart services (alias of yalla dr restart)
  stop                  Stop services (alias of yalla dr stop)
  connect               Connect to main docker container, directly in path to project (alias of yalla dr connect)
  update-cli            Update global yalla cli commands
  update-yalla            Update local yalla cli commands and tools

Tools commands :
---------------

  project               Execute project commands
      init              Initializes and configures a project to work with devilbox.
                        This command simplifies the initialization of an old project in the devilbox workflow.
                        It also allows to create the database and to use yalla commands
                        to download the database from a remote environment

---------------

  docker | dr           Execute docker actions
      config            Validate and view the Compose file
      stop              Stop services
      start             Start services
      build             Build or rebuild services
      cleanup           Remove stopped containers
      ssh               Connect to main docker container, where the code is and where the commands are available (wp cli, node, ...)
      connect           Connect to main docker container, directly in path to project
      exec              Execute a command in a running container

  yalla dr -h for list of commands

---------------

  mysql | db            Execute mysql command.
      -d                database_name -f path/to/file.sql : import a database
      -d                database_name -i "SHOW TABLES;" : run an inline sql command script
      -i                "SHOW DATABASES;" : run an inline sql command script
      -f                ./backup/create_user_and_database.sql : import an sql file

  yalla db -h  for list of commands and help

---------------

ansible-playbook | ap   Execute ansible available actions.
                        Yalla integrates ansible via an independent docker container.
       [-vikCKbe] [-e ANSIBLE EXTRA VARS] [playbook-name]...

       yalla ap -h  for list of commands

---------------

ansible-vault | av    Execute ansible available actions.
                      Yalla integrates ansible via an independent docker container.
       [-h|--help|create|decrypt|edit|encrypt|encrypt_string|rekey|view]

       yalla av -h  for list of commands and help

---------------

-h --help.            Display this help
-v, --version         Show yalla version

update                Not yet available
HEREDOC
}

# if ! [ -z "$@" ]
#   then
#     shift
#     ARGS=$@
# fi

#while [ $# -gt 0 ]; do
  case "$CMD" in
      # Shortcuts commands
      init | install )
          if ! [ -d 'yalla' ]; then
            echo "Clone yalla commands and tools"
            _yalla_self_install
          fi
          yalla project "${CMD}"
          ;;
      stop | start | restart | connect )
          yalla dr "${CMD}"
          ;;

      # Global commands
      docker | dr | ssh | db | mysql | ap | ansible-playbook | ansible-vault | av | project )
          # Store args, prevent $@ collision between scripts
          readonly PARAMS=("$@")

          #Check if yalla path exist or create it if it's a setup task
          _check_is_yalla_app

          # Run command
          ./yalla/main "$CMD" "${PARAMS[@]}"
          ;;

      # Utilities commands
      -v | --version)
          echo 'yalla version ' ${YALLA_VERSION}
          echo 'yalla path ' $(which yalla)
          ;;
      -h | --help)
          _yalla_usage
          ;;
      update-cli)
          curl -s https://buzzaka:Buzz06\$dev@yalla-dl.fabernovel.co/cli-install | sh
          ;;
      update-yalla)
          ./yalla/main update
          ;;

      # Autocomplete
      shortlist)
        cat <<HEREDOC
init
stop
start
restart
connect
docker
dr
mysql
db
ansible-playbook
ap
ansible-vault
av
project
ssh
-h --help
-v, --version
update-cli
update-yalla
HEREDOC
        ;;
       *)
          echo "${CMD} is not a registered command"
          exit 1
  esac
#  shift
#done
