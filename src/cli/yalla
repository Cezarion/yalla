#!/usr/bin/env bash

# Exit immediately on error
set -o nounset
set -o errexit
set -o pipefail
IFS=$'\n\t'
trap 'echo "Aborting due to errexit on line $LINENO. Exit code: $?" >&2' ERR

readonly YALLA_VERSION=0.1.2

# Preserve original arguments with quotes
# @see : https://stackoverflow.com/questions/3755772/how-to-preserve-double-quotes-in-in-a-shell-script/26733366#26733366
_args_list(){
    local argList=""
    #iterate on each argument
    for arg in "$@"
    do
      #if an argument contains a white space, enclose it in double quotes and append to the list
      #otherwise simply append the argument to the list
      if echo $arg | grep -q " "; then
       argList="$argList \"$arg\""
      else
       argList="$argList $arg"
      fi
    done

    #remove a possible trailing space at the beginning of the list
    argList=$(echo $argList | sed 's/^ *//')

    echo "$argList"
}

## Set Variables

export WORKING_DIR=$(pwd)

## Parse args
CMD=${1:--h}
shift

# Exit if not args or not a yalla project
_check_is_yalla_app() {
  if [ ! -d "./yalla" ] && [ "$CMD" != "create-project" ]; then
      echo -e "\n\xE2\x9C\x97 Error ! \n"
      cat <<HEREDOC
The "yalla" directory does not appear to be present.
Run <yalla create-project> or go to a directory where yall is installed

HEREDOC
      exit 1;
  fi
}

_yalla_usage(){
cat <<HEREDOC
Yalla is a command set to simplify the creation or maintenance of a project.

Requirements :
Docker   : https://www.docker.com/community-edition#download
Devilbox : https://bitbucket.org/buzzaka/devilbox

----------------------------------------------------------------------

Setup commands :

  create-project        Init a new project with the new skeleton workflow

---------------

  app                   Execute app commands
      setup-config      Initializes and configures a project to work with devilbox.
                        This command simplifies the initialization of an old project in the devilbox workflow.
                        It also allows to create the database and to use yalla commands
                        to download the database from a remote environment

---------------

  docker | dr           Execute docker actions
      config            Validate and view the Compose file
      stop              Stop services
      start             Start services
      build             Build or rebuild services
      cleanup           Remove stopped containers
      ssh               Connect to main docker container, where the code is and where the commands are available (wp cli, node, ...)
      connect           Connect to main docker container, directly in path to project
      exec              Execute a command in a running container

  yalla dr -h for list of commands

---------------

  mysql | db            Execute mysql command.
      -d                database_name -f path/to/file.sql : import a database
      -d                database_name -i "SHOW TABLES;" : run an inline sql command script
      -i                "SHOW DATABASES;" : run an inline sql command script
      -f                ./backup/create_user_and_database.sql : import an sql file

  yalla db -h  for list of commands and help

---------------

ansible-playbook | ap   Execute ansible available actions.
                        Yalla integrates ansible via an independent docker container.
       [-vikCKbe] [-e ANSIBLE EXTRA VARS] [options]...

       yalla ap -h  for list of commands

---------------

ansible-vault | av    Execute ansible available actions.
                      Yalla integrates ansible via an independent docker container.
       [-h|--help|create|decrypt|edit|encrypt|encrypt_string|rekey|view]

       yalla av -h  for list of commands and help

---------------

-h --help.            Display this help
-v, --version         Show yalla version

update                Not yet available
HEREDOC
}

# if ! [ -z "$@" ]
#   then
#     shift
#     ARGS=$@
# fi

#while [ $# -gt 0 ]; do
  case "$CMD" in
      create-project)
          #git clone -b yalla --single-branch git@bitbucket.org:buzzaka/project-skeleton.git yalla &&
           ./yalla/create-project
          ;;

      docker | dr | ssh | db | mysql | ap | ansible-playbook | app )
          #Check if yalla path exist
          _check_is_yalla_app

          # Store args, prevent $@ collision between scripts
          readonly ARGS=("$@")

          # Run command
          ./yalla/main "$CMD" $(_args_list "$ARGS")
          ;;
      -v | --version)
          echo 'yalla version ' ${YALLA_VERSION}
          echo 'yalla path ' $(which yalla)
          ;;
      -h | --help)
          _yalla_usage
          ;;
      self-update)
          curl -s https://buzzaka:Buzz06\$dev@yalla-dl.fabernovel.co/cli-install | sh
          ;;
      update)
          echo "@todo"
          ;;
      shortlist)
        cat <<HEREDOC
create-project
app setup-config
docker           | dr
mysql            | db
ansible-playbook | ap
ansible-vault    | av
app
ssh
-h --help
-v, --version
update
HEREDOC
HEREDOC
        ;;
       *)
          echo "${CMD} is not a registered command"
          exit 1
  esac
#  shift
#done
