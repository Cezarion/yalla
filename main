#!/usr/bin/env bash

#
#
# @authors Mathias Gorenflot (mathias.gorenflot@fabernovel.com)
# @date    2017-08-30 21:22:02
# @version $Id$
# @package yalla
#

###############################################################################
# Exit immediately on error
set -e
trap 'echo "Aborting due to errexit on line $LINENO. Exit code: $?" >&2' ERR


###############################################################################
##
## Set paths
##

# Path variable
# From /usr/local/bin/yalla

set -o allexport
readonly APP_PATH=$WORKING_DIR

# Set paths
readonly APP_YALLA_PATH="${WORKING_DIR}/yalla"
readonly APP_YALLA_SRC="${APP_YALLA_PATH}/src"
readonly APP_YALLA_LIB="${APP_YALLA_PATH}/src/lib"
readonly APP_YALLA_ACTIONS="${APP_YALLA_PATH}/src/actions"
readonly APP_YALLA_PLUGINS="${APP_YALLA_PATH}/src/plugins"

### Current user mail
readonly USER_EMAIL=$(git config user.email)
if [ -z "${USER_EMAIL}" ]; then readonly USER_EMAIL="admin@local.host"; fi

###############################################################################
##
## This file dispatch yalla command
##

. "${APP_YALLA_LIB}/common.sh"
. "${APP_YALLA_ACTIONS}/ansible"

set +o allexport

# Die if it's not a yalla project

# Script to run
readonly action=$1

#
# To preserve the original arguments,
# the _arg_list function converts the array to a string.
# Now you convert the string to a table
#
#
IFS=$'\n'; ARGS=($(echo "${2}" | grep -E -o '"[^"]*"|\S+'))



# List args
# for arg in "${ARGS[@]}"
#     do
#         printf "${arg}\n"
# done

case "$action" in
    docker | dr)
        "${APP_YALLA_ACTIONS}/devilbox" "${ARGS[@]}"
    ;;
    db | mysql)
        "${APP_YALLA_ACTIONS}/devilbox mysql ${ARGS[*]}"
    ;;
    ap | ansible-playbook)
        _ansible "${ARGS[@]}"
    ;;
esac
